---
- name: Premier déploiement (variabilisé)
  hosts: slave1
  become: true

  tasks:

    - name: Create a Linux user for the application
      user:
        name: "{{deploy_user}}"
        group: "{{deploy_group}}"
        shell: "/usr/sbin/nologin"
        state: "present"

    - name: Create a base directory for applications
      file:
        name: "{{base_dir}}"
        state: "directory"
        mode: "u+rwx,g+rx,o+rx"

    - name: Create a base directory for applications
      file:
        name: "{{base_app_dir}}"
        state: "directory"
        mode: "u+rwx,g+rx,o+rx"

    - name: Create a base directory for logs
      file:
        name: "{{base_log_dir}}"
        state: "directory"
        mode: "u+rwx,g+rx,o+rx"
    
    - name: Create application dir
      file:
        path: "/custom/app/myapp/"
        state: directory
        owner: "{{deploy_user}}"
        group: "{{deploy_group}}"
        mode: 0700

    - name: Create log dir
      file:
        path: "/custom/log/myapp/"
        state: directory
        owner: "{{deploy_user}}"
        group: "{{deploy_group}}"
        mode: 0700

    - name: Create application configuration dir
      file:
        path: "/custom/app/myapp-conf/"
        state: directory
        owner: "{{deploy_user}}"
        group: "{{deploy_group}}"
        mode: 0700

    - name: Copy executable jar
      copy:
        src: ../demo/target/demo.jar
        dest: "{{app_jar}}"
        owner: "{{deploy_user}}"
        group: "{{deploy_group}}"
        mode: 0770
      register: jar_copy

    - name: install java 8
      apt:
        name: openjdk-8-jdk
        state: present
        update-cache: no
        force: no

    - name: Install myapp.service systemd unit file
      template:
        src: "templates/systemd.service.j2"
        dest: "/etc/systemd/system/{{app}}.service"

    - name: Install external application.properties
      template:
        src: "templates/application.properties.j2"
        dest: "{{conf_dir}}/application.properties"

    - name: (re)Start myapp.service
      systemd:
        state: "restarted"
        name: "myapp.service"
        daemon_reload: "yes"
      when: True or jar_copy.changed

    # After the playbook has been ran
    # curl http://10.10.0.11:8080/ should return a message "Welcome from default-server"

    - name: Wait for the HTTP port to be listening
      wait_for:
        port: 8080
        timeout: 10
